//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/InputActions_Object.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions_Object : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions_Object()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions_Object"",
    ""maps"": [
        {
            ""name"": ""Game"",
            ""id"": ""03957035-c9fe-448a-abfd-a324b6bee3f3"",
            ""actions"": [
                {
                    ""name"": ""P1_Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""5d135049-c893-49ae-942b-e2fb5f6fbf04"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P1_Bluff"",
                    ""type"": ""Button"",
                    ""id"": ""784e5663-8796-4fbb-97c9-f37a00eca7de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P1_Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""4cba7501-c48a-4d6a-90fa-768e04a1ff27"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P2_Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""5485a4e4-d215-4c64-8702-6a689e7ba0d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P2_Bluff"",
                    ""type"": ""Button"",
                    ""id"": ""c197a0be-c5f6-42d5-865f-0804f3bc32b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P2_Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""9bdc0b16-9d52-4159-97d5-032975190448"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c1d0cf00-75e2-4601-ab8d-9f40ed7f78ab"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2aaf9f30-eda0-439f-a917-9f87ca4cabd1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Bluff"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c56d865f-c2f6-4c5f-b201-a46d215068cd"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5da34c64-c934-4525-94e2-81d5ec3f0a9c"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5bf605b-8687-4096-b0bb-9526a1ce8c9a"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Bluff"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06ccfcf5-0dbf-4392-aa47-7783d173f245"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_P1_Shoot = m_Game.FindAction("P1_Shoot", throwIfNotFound: true);
        m_Game_P1_Bluff = m_Game.FindAction("P1_Bluff", throwIfNotFound: true);
        m_Game_P1_Dodge = m_Game.FindAction("P1_Dodge", throwIfNotFound: true);
        m_Game_P2_Shoot = m_Game.FindAction("P2_Shoot", throwIfNotFound: true);
        m_Game_P2_Bluff = m_Game.FindAction("P2_Bluff", throwIfNotFound: true);
        m_Game_P2_Dodge = m_Game.FindAction("P2_Dodge", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game
    private readonly InputActionMap m_Game;
    private IGameActions m_GameActionsCallbackInterface;
    private readonly InputAction m_Game_P1_Shoot;
    private readonly InputAction m_Game_P1_Bluff;
    private readonly InputAction m_Game_P1_Dodge;
    private readonly InputAction m_Game_P2_Shoot;
    private readonly InputAction m_Game_P2_Bluff;
    private readonly InputAction m_Game_P2_Dodge;
    public struct GameActions
    {
        private @InputActions_Object m_Wrapper;
        public GameActions(@InputActions_Object wrapper) { m_Wrapper = wrapper; }
        public InputAction @P1_Shoot => m_Wrapper.m_Game_P1_Shoot;
        public InputAction @P1_Bluff => m_Wrapper.m_Game_P1_Bluff;
        public InputAction @P1_Dodge => m_Wrapper.m_Game_P1_Dodge;
        public InputAction @P2_Shoot => m_Wrapper.m_Game_P2_Shoot;
        public InputAction @P2_Bluff => m_Wrapper.m_Game_P2_Bluff;
        public InputAction @P2_Dodge => m_Wrapper.m_Game_P2_Dodge;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void SetCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterface != null)
            {
                @P1_Shoot.started -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Shoot;
                @P1_Shoot.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Shoot;
                @P1_Shoot.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Shoot;
                @P1_Bluff.started -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Bluff;
                @P1_Bluff.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Bluff;
                @P1_Bluff.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Bluff;
                @P1_Dodge.started -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Dodge;
                @P1_Dodge.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Dodge;
                @P1_Dodge.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnP1_Dodge;
                @P2_Shoot.started -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Shoot;
                @P2_Shoot.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Shoot;
                @P2_Shoot.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Shoot;
                @P2_Bluff.started -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Bluff;
                @P2_Bluff.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Bluff;
                @P2_Bluff.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Bluff;
                @P2_Dodge.started -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Dodge;
                @P2_Dodge.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Dodge;
                @P2_Dodge.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnP2_Dodge;
            }
            m_Wrapper.m_GameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @P1_Shoot.started += instance.OnP1_Shoot;
                @P1_Shoot.performed += instance.OnP1_Shoot;
                @P1_Shoot.canceled += instance.OnP1_Shoot;
                @P1_Bluff.started += instance.OnP1_Bluff;
                @P1_Bluff.performed += instance.OnP1_Bluff;
                @P1_Bluff.canceled += instance.OnP1_Bluff;
                @P1_Dodge.started += instance.OnP1_Dodge;
                @P1_Dodge.performed += instance.OnP1_Dodge;
                @P1_Dodge.canceled += instance.OnP1_Dodge;
                @P2_Shoot.started += instance.OnP2_Shoot;
                @P2_Shoot.performed += instance.OnP2_Shoot;
                @P2_Shoot.canceled += instance.OnP2_Shoot;
                @P2_Bluff.started += instance.OnP2_Bluff;
                @P2_Bluff.performed += instance.OnP2_Bluff;
                @P2_Bluff.canceled += instance.OnP2_Bluff;
                @P2_Dodge.started += instance.OnP2_Dodge;
                @P2_Dodge.performed += instance.OnP2_Dodge;
                @P2_Dodge.canceled += instance.OnP2_Dodge;
            }
        }
    }
    public GameActions @Game => new GameActions(this);
    public interface IGameActions
    {
        void OnP1_Shoot(InputAction.CallbackContext context);
        void OnP1_Bluff(InputAction.CallbackContext context);
        void OnP1_Dodge(InputAction.CallbackContext context);
        void OnP2_Shoot(InputAction.CallbackContext context);
        void OnP2_Bluff(InputAction.CallbackContext context);
        void OnP2_Dodge(InputAction.CallbackContext context);
    }
}
